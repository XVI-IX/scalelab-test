{
	"info": {
		"_postman_id": "a70bdca4-3fa0-4f70-9cd7-ca703b0a57fd",
		"name": "Food Ordering Service",
		"description": "# Food Ordering Service Documentation\n\n## Author 🖊️\n\n> David-Daniel Ojebiyi \n  \n\n## Overview\n\nThis submission is a technical test for the role of an entry-level software engineer\n\n## Introduction\n\nThis document serves as a comprehensive guide to the food ordering service, outlining its functionalities, user roles, and technical considerations. The service aims to provide a seamless and efficient experience for both customers and vendors, facilitating online food ordering with dynamic delivery time slots and mock payment processing.\n\n### **Target Users:**\n\n- **Customers:** Individuals seeking to conveniently order food from various vendors through the platform.\n- **Vendors:** Restaurants or businesses offering food items for online purchase and delivery.\n- **Super Admin:** The platform administrator responsible for managing vendors, orders, and overall system operations.\n    \n\n### **Key Features:**\n\n- **Public Access:** Customers can browse menus and place orders without requiring authentication.\n- **Dynamic Time Slots:** Orders are processed and delivered in clusters based on a dynamic time slot algorithm, ensuring efficient delivery management.\n- **Mock Payment Processing:** A simulated card payment system facilitates order confirmation while providing retry mechanisms for failed transactions.\n- **Real-Time Updates:** Customers and vendors receive timely notifications regarding order status, deliveries, and other relevant information.\n- **Vendor Management:** Vendors can register, create stores, manage menus, and analyze order data.\n- **Super Admin Control:** The super admin oversees vendor approvals, store visibility, order monitoring, and customer communication.\n    \n\n**This documentation provides:**\n\n- Detailed explanations of functionalities for each user role.\n- API reference guides for developers integrating with the service.\n- System architecture and design overviews.\n- Deployment and configuration instructions.\n- Troubleshooting tips and best practices.\n    \n\nBy utilizing this documentation, users and developers can gain a thorough understanding of the food ordering service, enabling them to effectively interact with the platform and contribute to its success.\n\n## Technologies Used\n\n- Node.js\n- Nest.js\n- Redis\n- PayStack API\n    \n\n### Database Used\n\n- PostgreSQL\n    \n\n## Setting up Locally\n\n### Install NodeJS\n\nTo install NodeJs, visit [here ](https://nodejs.org/en/download/current) to find instructions fitting your operating system.\n\n### Clone this repository\n\n``` bash\ngh repo clone\n\n ```\n\n### Database\n\nTo set up postgres locally, visit [here](https://www.postgresql.org/download/) to know the instructions for your operating system.\n\n#### Create a Database\nTo create a database, visit [here](https://www.postgresql.org/docs/current/sql-createdatabase.html)\n\n### Folder Structure\n\n- `src`: Contains the layer of the appliction responsibel for the business logic.\n    - `/admin`: Contains the service and controllers responsible for facilitating admin functions\n    - `/auth`: Contains the service and controllers responsible for authentication in this service\n    - `/common`: Contains shared code and utilites like constants, decorators, entities, enum, and guards\n    - `config`: contains the configuration files\n    - `customers`: Contains the service and controller code for facilitating customer operations on the service.\n    - `email`: Contains the service and controller code for facilitating the sending of emails.\n    - `items`: Contains the service and controller code for facilitating the operations of a vendor in relation to items to be added to a store.\n    - `orders`: Contains the service and controller code for facilitating orders.\n    - `payments`: Contains the service and controller code for facilitating payments using the paystack api.\n    - `prisma`: Contains the service for using prisma as an ORM in this service.\n    - `stores`: Contains the service and controller code for facilitating operations of the vendors on their stores.\n    - `timeslots`: Contains the service and controller code for faciliting the dynamic creation and allocation of timeslots (not implemented)\n    - `vendors`: Contains the service and controller code for facilitating operation of vendors on personal data.\n\n### Environment variable example\n\n``` txt\nDATABASE_URL=\"postgresql://[DATABASE USER]:[PASSWORD]@localhost:[PORT]/[DATABASE NAME]?schema=public\"\nJWT_SECRET=secret\nRESET_SECRET=secret\nADMIN_MAIL=\"admin@adminmail.com admin2@adminmail.com\"\nURL=\"http://localhost:3000\"\nEMAIL_PASS=emailPassword\nEMAIL_HOST=mailhost\nEMAIL_PORT=port\nEMAIL_USER='emailuser'\nPAYSTACK_KEY=secret\nTRANSACTION_FEE=fee\nURL=\"https://api.paystack.co\"\n\n ```\n\n### Install the Dependencies\n`npm run install`\n\n#### Prisma\n`npx prisma db push`\n\n### Run Service\n`npm run start:dev`",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21588593"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Sign in",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_name\": \"johndoe123\",\r\n    \"phone_number\": \"+1234567890\",\r\n    \"email\": \"johndoe2@example.com\",\r\n    \"google_id\": \"1234567990\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/auth",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth"
							]
						},
						"description": "#### **Purpose**\n\nThis route facilitates the secure collection of user data through their Google account. It is designed to be accessed before a user places an order, ensuring that essential user information persists throughout their session and potentially across future visits.\n\n**Body Parameters**\n\n- user_name {string} - username as retrieved from google auth\n    \n- email {string} - user's email\n    \n- google_id {string} - user's google id\n    \n- phone_number {string} \\[optional\\] - user's phone number"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"user_name\": \"johndoe123\",\r\n    \"phone_number\": \"+1234567890\",\r\n    \"email\": \"johndoe@example.com\",\r\n    \"google_id\": \"1234567890\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/auth",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"auth"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "266"
								},
								{
									"key": "ETag",
									"value": "W/\"10a-2j+Hbc6SeUjuFKyYVtkSJqieKhs\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 09:39:10 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User record saved\",\n    \"statusCode\": 201,\n    \"status\": \"success\",\n    \"token\": \"auth-token\"\n}"
						}
					]
				},
				{
					"name": "Register Admin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_name\": \"admin\",\r\n    \"email\": \"ojebiyidaviddaniel@gmail.com\",\r\n    \"phone_number\": \"0900000000\",\r\n    \"password\": \"adminPassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/auth/admin",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"admin"
							]
						},
						"description": "**Purpose:**\n\nThis route enables the creation of a new admin user for the system. However, **registration is restricted to email addresses explicitly defined within the environment variables**. This restriction ensures that only authorized individuals can be granted administrative privileges.\n\n**Key Points:**\n\n- **Limited Access:** Only email addresses pre-configured in the environment can be used for admin registration.\n- **Enhanced Security:** This measure safeguards the system from unauthorized access by restricting admin creation to designated individuals.\n- **Scalability:** By leveraging environment variables, authorized email addresses can be easily updated without code modifications.\n    \n\n**Body Parameters:**\n\n- user_name { string } - username intended for the admin account.\n- email { string } - email for the admin account which must be authorized in the environment.\n- phone_number { string } - phone number of user creating this admin account.\n- password { string } - password for admin account\n    \n\nUpon receiving a valid email address, the system **Generates a unique verification token and Sends an email containing the token to the provided address.**"
					},
					"response": [
						{
							"name": "Unauthorized - invalid admin email",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"user_name\": \"admin\",\r\n    \"email\": \"testadmin@domain.com\",\r\n    \"phone_number\": \"0900000000\",\r\n    \"password\": \"adminPassword\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/auth/admin",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"auth",
										"admin"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "82"
								},
								{
									"key": "ETag",
									"value": "W/\"52-gk9JuICPcHY3XQIgRVDYRXrmaCM\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 09:47:15 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Please provide an admin mail\",\n    \"error\": \"Unauthorized\",\n    \"statusCode\": 401\n}"
						},
						{
							"name": "201 Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"user_name\": \"admin\",\r\n    \"email\": \"ojebiyidaviddaniel@gmail.com\",\r\n    \"phone_number\": \"0900000000\",\r\n    \"password\": \"adminPassword\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/auth/admin",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"auth",
										"admin"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "99"
								},
								{
									"key": "ETag",
									"value": "W/\"63-s7eLg+q4MECyChy0A4LLSMbDFak\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 09:49:18 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Admin account created. Please verify your account\",\n    \"status\": \"success\",\n    \"statusCode\": 200\n}"
						},
						{
							"name": "400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"user_name\": \"admin\",\r\n    \"email\": \"ojebiyidaviddaniel@gmail.com\",\r\n    \"phone_number\": \"0900000000\",\r\n    \"password\": \"adminPassword\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/auth/admin",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"auth",
										"admin"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "104"
								},
								{
									"key": "ETag",
									"value": "W/\"68-qoBeUgrTfuZjgDPK7b+zM7GZDyI\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 12:12:43 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Unique constraint violation. Ensure email is unique\",\n    \"error\": \"Bad Request\",\n    \"statusCode\": 400\n}"
						}
					]
				},
				{
					"name": "Verify Admin",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/auth/admin/verify?token=6f419cd44a3ea90508172c08",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"admin",
								"verify"
							],
							"query": [
								{
									"key": "token",
									"value": "6f419cd44a3ea90508172c08"
								}
							]
						},
						"description": "**Purpose:**\n\nThis route verifies an admin user's email address. Users submit a token received via email, which the system validates to ensure its authenticity and match with a registered user. Upon successful verification, the user's email is marked as verified, potentially granting them full access to the system's features.  \n  \n**Route Parameter**\n\n- **token** { string } - verification token"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/auth/admin/verify?token=7b695d81ea7ef234f88a65a0",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"auth",
										"admin",
										"verify"
									],
									"query": [
										{
											"key": "token",
											"value": "7b695d81ea7ef234f88a65a0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "72"
								},
								{
									"key": "ETag",
									"value": "W/\"48-0zCYxTOwhz3S4E+trwzrr6/XJMc\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 10:08:10 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Admin account verified\",\n    \"status\": \"success\",\n    \"statusCode\": 200\n}"
						}
					]
				},
				{
					"name": "Register Vendor",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Test Vendor\",\r\n    \"email\": \"viidoking@gmail.com\",\r\n    \"phone_number\": \"0900000000\",\r\n    \"business_address\": \"123, any town stree, main\",\r\n    \"password\": \"vendorPassword\",\r\n    \"bank_details\": {\r\n        \"name\": \"Test Vendor\",\r\n        \"bank_code\": \"058\",\r\n        \"account_number\": \"0261867489\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/auth/vendor",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"vendor"
							]
						},
						"description": "**Purpose:**\n\nThis route facilitates the registration of new vendors on the platform. Upon successful registration, the vendor needs to be approved by an admin after which vendors gain the ability to:\n\n- **Create and manage their own stores:** This includes defining store details, branding, and product categories.\n- **Add and manage items within their stores:** Vendors can create detailed product descriptions, set prices, and manage inventory levels.\n    \n\n**Body Parameters:**\n\n- name { string } - Vendor's intended name.\n- email { string } - vendor's email.\n- phone_number { string } - vendor's phone number,\n- business_address { string } - vendor's business address\n    \n\nOptional Body Parameters\n\n- bank_details { object } - Vendor's bank account information (optional) is collected to facilitate secure and efficient payout of their earnings. This object includes:\n    \n    - name { string } - Account name\n        \n    - bank_code { string } - Code representing the vendor's bank\n        \n    - account_number { string } - Vendor's account number. The service supports only nuban."
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Test Vendor\",\r\n    \"email\": \"testVendor@gmail.com\",\r\n    \"phone_number\": \"0900000000\",\r\n    \"business_address\": \"123, any town stree, main\",\r\n    \"password\": \"vendorPassword\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/auth/vendor",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"auth",
										"vendor"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "107"
								},
								{
									"key": "ETag",
									"value": "W/\"6b-NX1bsOJmGdAiLnyUvWpuDYXlVao\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 10:20:41 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Registration successful, verification token sent to email\",\n    \"status\": \"success\",\n    \"statusCode\": 201\n}"
						},
						{
							"name": "Register Vendor with bank details",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Test Vendor\",\r\n    \"email\": \"viidoking@gmail.com\",\r\n    \"phone_number\": \"0900000000\",\r\n    \"business_address\": \"123, any town stree, main\",\r\n    \"password\": \"vendorPassword\",\r\n    \"bank_details\": {\r\n        \"name\": \"Test Vendor\",\r\n        \"bank_code\": \"058\",\r\n        \"account_number\": \"0261867489\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/auth/vendor",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"auth",
										"vendor"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "107"
								},
								{
									"key": "ETag",
									"value": "W/\"6b-NX1bsOJmGdAiLnyUvWpuDYXlVao\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 Feb 2024 03:09:13 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Registration successful, verification token sent to email\",\n    \"status\": \"success\",\n    \"statusCode\": 201\n}"
						}
					]
				},
				{
					"name": "Verify  Vendor",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/auth/vendor/verify?token=d79e459ff6e2470fba2b6fbf",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"vendor",
								"verify"
							],
							"query": [
								{
									"key": "token",
									"value": "d79e459ff6e2470fba2b6fbf"
								}
							]
						},
						"description": "**Purpose:**\n\nThis route verifies an vendor's email address. Vendors submit a token received via email, which the system validates to ensure its authenticity and match with a registered vendor. Upon successful verification, the vendor's email is marked as verified, potentially granting them full access to the system's features.\n\n**Route Parameter**\n\n- **token** { string } - verification token"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/auth/vendor/verify?token=16fa27ed948aa35bf9eacd78",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"auth",
										"vendor",
										"verify"
									],
									"query": [
										{
											"key": "token",
											"value": "16fa27ed948aa35bf9eacd78"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "79"
								},
								{
									"key": "ETag",
									"value": "W/\"4f-CCjRwcow4dlvVEUFDnTaVDUIuO4\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 10:25:07 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Account verified successfully\",\n    \"status\": \"success\",\n    \"statusCode\": 200\n}"
						}
					]
				},
				{
					"name": "forgot password - vendor",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"testVendor@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/auth/vendor/forgot-password",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"vendor",
								"forgot-password"
							]
						},
						"description": "**Purpose:**\n\nVendors can recover forgotten passwords by entering their registered email.The system validates the email, generates a unique reset token, and sends it via email. Vendors use the token to reset their password through a designated link, regaining account access.\n\nBody Parameter\n\n- email { string } - email to send reset password link to."
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"testVendor@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/auth/vendor/forgot-password",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"auth",
										"vendor",
										"forgot-password"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "74"
								},
								{
									"key": "ETag",
									"value": "W/\"4a-JNwZXgieC05JdwOkDsmG3k1UVkI\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 10:38:02 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Reset Link sent to email\",\n    \"status\": \"success\",\n    \"statusCode\": 200\n}"
						}
					]
				},
				{
					"name": "Reset Password - Vendor",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"newPassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/auth/vendor/reset-password?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsInVzZXJuYW1lIjoiVGVzdCBWZW5kb3IiLCJlbWFpbCI6InRlc3RWZW5kb3JAZ21haWwuY29tIiwiaWF0IjoxNzA4NTExODgyLCJleHAiOjE3MDg1MTM2ODJ9.uPS90syu16rzQiWPRfcbf8iCbCY8Yw2uUKELnHsF1LI",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"vendor",
								"reset-password"
							],
							"query": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsInVzZXJuYW1lIjoiVGVzdCBWZW5kb3IiLCJlbWFpbCI6InRlc3RWZW5kb3JAZ21haWwuY29tIiwiaWF0IjoxNzA4NTExODgyLCJleHAiOjE3MDg1MTM2ODJ9.uPS90syu16rzQiWPRfcbf8iCbCY8Yw2uUKELnHsF1LI"
								}
							]
						},
						"description": "**Purpose**:\n\nVendors complete their password reset by submitting a verification token (from email) and their desired new password. The system validates the token and resets the password if valid, allowing vendors to access their account again.\n\nBody Parameter\n\n- password { string } - new password to be used by user"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"password\": \"newPassword\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/auth/vendor/reset-password?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsInVzZXJuYW1lIjoiVGVzdCBWZW5kb3IiLCJlbWFpbCI6InRlc3RWZW5kb3JAZ21haWwuY29tIiwiaWF0IjoxNzA4NTExODgyLCJleHAiOjE3MDg1MTM2ODJ9.uPS90syu16rzQiWPRfcbf8iCbCY8Yw2uUKELnHsF1LI",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"auth",
										"vendor",
										"reset-password"
									],
									"query": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsInVzZXJuYW1lIjoiVGVzdCBWZW5kb3IiLCJlbWFpbCI6InRlc3RWZW5kb3JAZ21haWwuY29tIiwiaWF0IjoxNzA4NTExODgyLCJleHAiOjE3MDg1MTM2ODJ9.uPS90syu16rzQiWPRfcbf8iCbCY8Yw2uUKELnHsF1LI"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "77"
								},
								{
									"key": "ETag",
									"value": "W/\"4d-ej4eYXpDpm32NQPKfDBE59CoxRw\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 10:40:17 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Password reset successfully\",\n    \"status\": \"success\",\n    \"statusCode\": 200\n}"
						}
					]
				},
				{
					"name": "Login - admin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"ojebiyidaviddaniel@gmail.com\",\r\n    \"password\": \"adminPassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/auth/login/admin",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"login",
								"admin"
							]
						},
						"description": "**Purpose**_:  \n_This route facilitates the secure login process for authorized admin users of the platform.\n\n**Body Parameters:**\n\n- **email** { string } - admin email\n- **password** { string} - account password"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"ojebiyidaviddaniel@gmail.com\",\r\n    \"password\": \"adminPassword\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/auth/login/admin",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"auth",
										"login",
										"admin"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "115"
								},
								{
									"key": "ETag",
									"value": "W/\"73-u0S/7BjxkltZl9NxTHF+Qqs7HVE\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 16:42:36 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Verification token sent to your email. Please verify your account\",\n    \"status\": \"success\",\n    \"statusCode\": 200\n}"
						},
						{
							"name": "200 OK - token",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"ojebiyidaviddaniel@gmail.com\",\r\n    \"password\": \"adminPassword\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/auth/login/admin",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"auth",
										"login",
										"admin"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "240"
								},
								{
									"key": "ETag",
									"value": "W/\"f0-sdC8toyrPsMIOzAwLJX0Ahx6sVI\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 16:44:29 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEyLCJ1c2VybmFtZSI6ImFkbWluIiwiZW1haWwiOiJvamViaXlpZGF2aWRkYW5pZWxAZ21haWwuY29tIiwicm9sZSI6InN1cGVyYWRtaW4iLCJpYXQiOjE3MDg1MzM4Njl9.kUhUG5e3KId_0aqce0fc9x6nmR-_D3TJb37xiUVBi4k\"\n}"
						}
					]
				},
				{
					"name": "Login - Vendor",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"viidoking@gmail.com\",\r\n    \"password\": \"vendorPassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/auth/login/vendor",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"login",
								"vendor"
							]
						},
						"description": "**Purpose**:  \nThis route facilitates the secure login process for authorized vendors of the platform.\n\n**Body Parameters:**\n\n- **email** { string } - admin email\n    \n- **password** { string} - account password"
					},
					"response": [
						{
							"name": "200 OK - token",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"testVendor@gmail.com\",\r\n    \"password\": \"vendorPassword\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/auth/login/vendor",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"auth",
										"login",
										"vendor"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "254"
								},
								{
									"key": "ETag",
									"value": "W/\"fe-jnWaZPa7lceCNmWeh8MN3PGCDu8\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 16:47:54 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjIsImVtYWlsIjoidGVzdFZlbmRvckBnbWFpbC5jb20iLCJ1c2VybmFtZSI6IlRlc3QgVmVuZG9yIiwicm9sZSI6InZlbmRvciIsImlhdCI6MTcwODUzNDA3NCwiZXhwIjoxNzA4NTQ0ODc0fQ.RaB5KMC6s7dmkJ4aZlVEJwk6gHHn5oagbSIXnkeOTmk\"\n}"
						}
					]
				}
			],
			"description": "This section of the documentation delves into the authentication mechanisms employed by the food ordering service. While customer access remains public, vendor registration and login processes are covered in detail, including:\n\n- User account creation and verification for vendors.\n    \n- Secure login procedures with appropriate credentials.\n    \n- Role-based access control (RBAC) defining vendor permissions.\n    \n- Authentication token management and handling."
		},
		{
			"name": "Stores",
			"item": [
				{
					"name": "Create Store",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjMsImVtYWlsIjoidmlpZG9raW5nQGdtYWlsLmNvbSIsInVzZXJuYW1lIjoiVGVzdCBWZW5kb3IiLCJyb2xlIjpbInZlbmRvciJdLCJpYXQiOjE3MDg1ODYyMTksImV4cCI6MTcwODU5NzAxOX0.Yl1stEUQ9n6bKO_IXMj0bY-YWNAU6XSZqk4SAGZERsY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"test store 3\",\r\n    \"address\": \"test address\",\r\n    \"description\": \"test_description\",\r\n    \"image_url\": \"test_url\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/stores",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"stores"
							]
						},
						"description": "**Purpose**:  \nThis route empowers registered vendors to establish new stores on the platform, allowing them to showcase and sell their products.\n\nVendors can create new stores by providing details like name and description. The system verifies their identity through an authorization token and associates the store with their account. Upon successful creation, vendors receive confirmation and can manage their new stores.\n\n**Body Parameters:**\n\n- name { string } - Store name\n- address { string } - Store's address\n- description { string } - Store's description\n- image_url { string } - Link to the store's picture"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"test store\",\r\n    \"address\": \"test address\",\r\n    \"description\": \"test_description\",\r\n    \"image_url\": \"test_url\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/stores",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"stores"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "304"
								},
								{
									"key": "ETag",
									"value": "W/\"130-0CloB41gXVGVp5adLjo2W1c4gMw\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 17:09:06 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Store has been created\",\n    \"status\": \"success\",\n    \"statusCode\": 200,\n    \"data\": {\n        \"store_id\": 2,\n        \"vendor_id\": 2,\n        \"name\": \"test store\",\n        \"address\": \"test address\",\n        \"description\": \"test_description\",\n        \"image_url\": \"test_url\",\n        \"active\": false,\n        \"created_at\": \"2024-02-21T17:09:06.389Z\",\n        \"updated_at\": \"2024-02-21T17:09:06.389Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get Store",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjIsImVtYWlsIjoidGVzdFZlbmRvckBnbWFpbC5jb20iLCJ1c2VybmFtZSI6IlRlc3QgVmVuZG9yIiwicm9sZSI6WyJ2ZW5kb3IiXSwiaWF0IjoxNzA4NTM1MjgyLCJleHAiOjE3MDg1NDYwODJ9.0utCdIxpXVWsI1WMVkp_QE_Ee-86QatLtNsXcUR61T8",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/stores",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"stores"
							]
						},
						"description": "**Purpose:**\n\nAllows vendors to view information about their own stores. Authenticates vendor using authorization token, retrieves and returns data for all stores associated with the vendor"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/stores",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"stores"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "335"
								},
								{
									"key": "ETag",
									"value": "W/\"14f-Y8YLkVmBl6fW5KTtAn/3rfqvZi4\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 17:11:32 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Stores retrieved\",\n    \"status\": \"success\",\n    \"statusCode\": 200,\n    \"data\": [\n        {\n            \"store_id\": 1,\n            \"vendor_id\": 2,\n            \"name\": \"test store\",\n            \"address\": \"test address\",\n            \"description\": \"test_description\",\n            \"image_url\": \"test_url\"\n        },\n        {\n            \"store_id\": 2,\n            \"vendor_id\": 2,\n            \"name\": \"test store\",\n            \"address\": \"test address\",\n            \"description\": \"test_description\",\n            \"image_url\": \"test_url\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Store By Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjIsImVtYWlsIjoidGVzdFZlbmRvckBnbWFpbC5jb20iLCJ1c2VybmFtZSI6IlRlc3QgVmVuZG9yIiwicm9sZSI6WyJ2ZW5kb3IiXSwiaWF0IjoxNzA4NTM1MjgyLCJleHAiOjE3MDg1NDYwODJ9.0utCdIxpXVWsI1WMVkp_QE_Ee-86QatLtNsXcUR61T8",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/stores/1",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"stores",
								"1"
							]
						},
						"description": "**Purpose:**\n\nAllows vendors to view information about a specific store."
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/stores/1",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"stores",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "316"
								},
								{
									"key": "ETag",
									"value": "W/\"13c-Xij15CzzPt6BfBOJexrSAlDEFNc\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 17:23:37 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Store retrieved\",\n    \"status\": \"success\",\n    \"statusCode\": 200,\n    \"data\": {\n        \"store_id\": 1,\n        \"vendor_id\": 2,\n        \"name\": \"test store\",\n        \"address\": \"test address\",\n        \"description\": \"test_description\",\n        \"image_url\": \"test_url\",\n        \"active\": false,\n        \"status\": \"pending\",\n        \"created_at\": \"2024-02-21T16:56:06.555Z\",\n        \"updated_at\": \"2024-02-21T16:56:06.555Z\"\n    }\n}"
						},
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/stores/1",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"stores",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "316"
								},
								{
									"key": "ETag",
									"value": "W/\"13c-Xij15CzzPt6BfBOJexrSAlDEFNc\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 17:23:37 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Store retrieved\",\n    \"status\": \"success\",\n    \"statusCode\": 200,\n    \"data\": {\n        \"store_id\": 1,\n        \"vendor_id\": 2,\n        \"name\": \"test store\",\n        \"address\": \"test address\",\n        \"description\": \"test_description\",\n        \"image_url\": \"test_url\",\n        \"active\": false,\n        \"status\": \"pending\",\n        \"created_at\": \"2024-02-21T16:56:06.555Z\",\n        \"updated_at\": \"2024-02-21T16:56:06.555Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "Update Store",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjIsImVtYWlsIjoidGVzdFZlbmRvckBnbWFpbC5jb20iLCJ1c2VybmFtZSI6IlRlc3QgVmVuZG9yIiwicm9sZSI6WyJ2ZW5kb3IiXSwiaWF0IjoxNzA4NTM1MjgyLCJleHAiOjE3MDg1NDYwODJ9.0utCdIxpXVWsI1WMVkp_QE_Ee-86QatLtNsXcUR61T8",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"changed store name\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/stores/1",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"stores",
								"1"
							]
						},
						"description": "**Purpose:**\n\nAllows vendors to update information about their store.\n\n**Body Parameters:**\n\n- name { string } - Store name\n    \n- address { string } - Store's address\n    \n- description { string } - Store's description\n    \n- image_url { string } - Link to the store's picture"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"changed store name\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/stores/1",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"stores",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "322"
								},
								{
									"key": "ETag",
									"value": "W/\"142-LTnetOnTYAOjylZ/ZGajQaLBTJI\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 17:30:50 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Store updated\",\n    \"status\": \"success\",\n    \"statusCode\": 200,\n    \"data\": {\n        \"store_id\": 1,\n        \"vendor_id\": 2,\n        \"name\": \"changed store name\",\n        \"address\": \"test address\",\n        \"description\": \"test_description\",\n        \"image_url\": \"test_url\",\n        \"active\": false,\n        \"status\": \"pending\",\n        \"created_at\": \"2024-02-21T16:56:06.555Z\",\n        \"updated_at\": \"2024-02-21T17:30:49.906Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "Change Store Visibility",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjIsImVtYWlsIjoidGVzdFZlbmRvckBnbWFpbC5jb20iLCJ1c2VybmFtZSI6IlRlc3QgVmVuZG9yIiwicm9sZSI6WyJ2ZW5kb3IiXSwiaWF0IjoxNzA4NTM1MjgyLCJleHAiOjE3MDg1NDYwODJ9.0utCdIxpXVWsI1WMVkp_QE_Ee-86QatLtNsXcUR61T8",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "localhost:3000/stores/1/changeStatus",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"stores",
								"1",
								"changeStatus"
							]
						},
						"description": "Purpose:\n\nThis route allows vendors to manage the visibility of their stores on the platform. This allows them to:\n\n- **Temporarily close their stores:** Deactivate store listings, preventing customer orders when they are out of stock or unavailable.\n- **Reopen stores:** Reactivate store listings, making them visible and accepting customer orders again"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "localhost:3000/stores/1/changeStatus",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"stores",
										"1",
										"changeStatus"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "74"
								},
								{
									"key": "ETag",
									"value": "W/\"4a-9flAS8bUEVkxsUTVrTLjbUsoYYU\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 17:33:56 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Store visiblilty updated\",\n    \"status\": \"success\",\n    \"statusCode\": 200\n}"
						}
					]
				},
				{
					"name": "Get Store Items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/stores/1/items",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"stores",
								"1",
								"items"
							]
						},
						"description": "**Purpose**:\n\nThis public route enables anyone to browse and access the complete list of items offered by a specific store on the platform."
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/stores/1/items",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"stores",
										"1",
										"items"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "688"
								},
								{
									"key": "ETag",
									"value": "W/\"2b0-IoS40tiD7HvwY8tSieJ/TMRmov4\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 18:04:31 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Items retrieved\",\n    \"status\": \"success\",\n    \"statusCode\": 200,\n    \"data\": [\n        {\n            \"item_id\": 1,\n            \"store_id\": 1,\n            \"name\": \"Burgers\",\n            \"description\": \"FResh burgers\",\n            \"price\": 2330,\n            \"image_url\": \"image.link\",\n            \"available\": true,\n            \"created_at\": \"2024-02-21T18:00:41.273Z\",\n            \"updated_at\": \"2024-02-21T18:00:41.273Z\"\n        },\n        {\n            \"item_id\": 2,\n            \"store_id\": 1,\n            \"name\": \"Pies\",\n            \"description\": \"FResh Pies\",\n            \"price\": 2030,\n            \"image_url\": \"image.link\",\n            \"available\": true,\n            \"created_at\": \"2024-02-21T18:01:09.766Z\",\n            \"updated_at\": \"2024-02-21T18:01:09.766Z\"\n        },\n        {\n            \"item_id\": 3,\n            \"store_id\": 1,\n            \"name\": \"Rice\",\n            \"description\": \"FResh Rice\",\n            \"price\": 200,\n            \"image_url\": \"image.link\",\n            \"available\": true,\n            \"created_at\": \"2024-02-21T18:01:30.763Z\",\n            \"updated_at\": \"2024-02-21T18:01:30.763Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Add Item to Store",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjMsImVtYWlsIjoidmlpZG9raW5nQGdtYWlsLmNvbSIsInVzZXJuYW1lIjoiVGVzdCBWZW5kb3IiLCJyb2xlIjpbInZlbmRvciJdLCJpYXQiOjE3MDg1NzE0NzQsImV4cCI6MTcwODU4MjI3NH0.wIoDVcnZYWr6tt2-FkUT_dTMzQkLzzaLGtP64_TB5iM",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Beef\",\r\n    \"description\": \"FResh fresh kuli\",\r\n    \"price\": 500,\r\n    \"image_url\": \"image.link\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/stores/3/items",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"stores",
								"3",
								"items"
							]
						},
						"description": "**Purpose:**\n\nThis route empowers vendors to expand their product offerings by adding new items to their existing stores.\n\nBody Parameters:\n\n- name { string } - Name of item to be added to store\n- description { string } - description of item to be added to the store\n- price { number } - price of item being added to store.\n- image_url { string } - link to image of item being added to store"
					},
					"response": [
						{
							"name": "201 Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Rice\",\r\n    \"description\": \"FResh Rice\",\r\n    \"price\": 200,\r\n    \"image_url\": \"image.link\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/stores/1/items",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"stores",
										"1",
										"items"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "291"
								},
								{
									"key": "ETag",
									"value": "W/\"123-ThLsghiKSQWlvvYA/2NSBX6Edhc\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 18:01:30 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Item added to store successfully\",\n    \"status\": \"success\",\n    \"statusCode\": 200,\n    \"data\": {\n        \"item_id\": 3,\n        \"store_id\": 1,\n        \"name\": \"Rice\",\n        \"description\": \"FResh Rice\",\n        \"price\": 200,\n        \"image_url\": \"image.link\",\n        \"available\": true,\n        \"created_at\": \"2024-02-21T18:01:30.763Z\",\n        \"updated_at\": \"2024-02-21T18:01:30.763Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "Update Store Item",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjIsImVtYWlsIjoidGVzdFZlbmRvckBnbWFpbC5jb20iLCJ1c2VybmFtZSI6IlRlc3QgVmVuZG9yIiwicm9sZSI6WyJ2ZW5kb3IiXSwiaWF0IjoxNzA4NTM1MjgyLCJleHAiOjE3MDg1NDYwODJ9.0utCdIxpXVWsI1WMVkp_QE_Ee-86QatLtNsXcUR61T8",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Ice cream\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/stores/1/items/1",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"stores",
								"1",
								"items",
								"1"
							]
						},
						"description": "**Purpose:**\n\nThis route allows vendors to update items in an existing store.\n\nBody Parameters:\n\n- name { string } - Name of item to be added to store\n    \n- description { string } - description of item to be added to the store\n    \n- price { number } - price of item being added to store.\n    \n- image_url { string } - link to image of item being added to store"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Ice cream\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/stores/1/items/1",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"stores",
										"1",
										"items",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "294"
								},
								{
									"key": "ETag",
									"value": "W/\"126-E252eMn7pBbDjXuPVWI666PB0JI\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 18:08:30 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Item updated successfully.\",\n    \"status\": \"success\",\n    \"statusCode\": 200,\n    \"data\": {\n        \"item_id\": 1,\n        \"store_id\": 1,\n        \"name\": \"Ice cream\",\n        \"description\": \"FResh burgers\",\n        \"price\": 2330,\n        \"image_url\": \"image.link\",\n        \"available\": true,\n        \"created_at\": \"2024-02-21T18:00:41.273Z\",\n        \"updated_at\": \"2024-02-21T18:08:30.767Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "Update Item Availability",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjIsImVtYWlsIjoidGVzdFZlbmRvckBnbWFpbC5jb20iLCJ1c2VybmFtZSI6IlRlc3QgVmVuZG9yIiwicm9sZSI6WyJ2ZW5kb3IiXSwiaWF0IjoxNzA4NTM1MjgyLCJleHAiOjE3MDg1NDYwODJ9.0utCdIxpXVWsI1WMVkp_QE_Ee-86QatLtNsXcUR61T8",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "localhost:3000/stores/1/items/1/available",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"stores",
								"1",
								"items",
								"1",
								"available"
							]
						},
						"description": "**Purpose:**\n\nThis route empowers vendors to manage the availability of their existing items, allowing them to mark items as either available or not.\n\nThe authorization token ensures that the vendor in session only has access to their data."
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "localhost:3000/stores/1/items/1/available",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"stores",
										"1",
										"items",
										"1",
										"available"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "75"
								},
								{
									"key": "ETag",
									"value": "W/\"4b-AQZVm2kty//MqIuVMK8hX0dDN14\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 18:11:39 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Item availability updated\",\n    \"status\": \"success\",\n    \"statusCode\": 200\n}"
						}
					]
				},
				{
					"name": "Delete Store Item",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjIsImVtYWlsIjoidGVzdFZlbmRvckBnbWFpbC5jb20iLCJ1c2VybmFtZSI6IlRlc3QgVmVuZG9yIiwicm9sZSI6WyJ2ZW5kb3IiXSwiaWF0IjoxNzA4NTM1MjgyLCJleHAiOjE3MDg1NDYwODJ9.0utCdIxpXVWsI1WMVkp_QE_Ee-86QatLtNsXcUR61T8",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/stores/1/items/1",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"stores",
								"1",
								"items",
								"1"
							]
						},
						"description": "Purpose:\n\nDelete item from specified store."
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "localhost:3000/stores/1/items/1",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"stores",
										"1",
										"items",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "87"
								},
								{
									"key": "ETag",
									"value": "W/\"57-LAzYpNXxXc7g3giQUvjt+PzYcKc\""
								},
								{
									"key": "Date",
									"value": "Wed, 21 Feb 2024 18:13:49 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Item deleted successfully\",\n    \"status\": \"success\",\n    \"statusCode\": 200,\n    \"data\": null\n}"
						}
					]
				},
				{
					"name": "Stores - sse",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			],
			"description": "This section focuses on the functionalities associated with stores within the food ordering service. It provides guidance on:\n\n- Store creation, modification, and management.\n    \n- Menu item addition, editing, and removal.\n    \n- Inventory management and stock control mechanisms.\n    \n- Product visibility and availability control for customers.\n    \n- Order fulfillment processes and vendor-customer interactions"
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Order",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjE1LCJ1c2VybmFtZSI6ImpvaG5kb2UxMjMiLCJlbWFpbCI6ImpvaG5kb2VAZXhhbXBsZS5jb20iLCJyb2xlIjpbImN1c3RvbWVyIl0sImlhdCI6MTcwODU3MTg1NX0.fVvF6-jkqOI1ALBTN7gI7jTwLgw6I472_D0LBHJL1LE",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"order_items\": [\r\n    {\r\n      \"item_id\": 3,\r\n      \"quantity\": 3,\r\n      \"price\": 55.27\r\n    },\r\n    {\r\n      \"item_id\": 4,\r\n      \"quantity\": 7,\r\n      \"price\": 17.14\r\n    }\r\n  ],\r\n  \"total_price\": 285.65,\r\n  \"delivery_location\": \"Address 34\",\r\n  \"timeslotId\": 1\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/orders/3",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"orders",
								"3"
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"order_items\": [\r\n    {\r\n      \"item_id\": 60,\r\n      \"quantity\": 3,\r\n      \"price\": 55.27\r\n    },\r\n    {\r\n      \"item_id\": 73,\r\n      \"quantity\": 7,\r\n      \"price\": 17.14\r\n    },\r\n    {\r\n      \"item_id\": 33,\r\n      \"quantity\": 3,\r\n      \"price\": 84.23\r\n    }\r\n  ],\r\n  \"total_price\": 156.65,\r\n  \"delivery_location\": \"Address 34\",\r\n  \"timeslotId\": 1\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/orders/1",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"orders",
										"1"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "126"
								},
								{
									"key": "ETag",
									"value": "W/\"7e-XQhUqaboDGt8OyUwR6/8kiJI3Bo\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 Feb 2024 00:31:36 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"authorization_url\": \"https://checkout.paystack.com/ag3hclcz6069mrq\",\n    \"reference\": \"92rdjj0d96\",\n    \"access_code\": \"ag3hclcz6069mrq\"\n}"
						}
					]
				},
				{
					"name": "Verify Order",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEzLCJ1c2VybmFtZSI6ImpvaG5kb2UxMjMiLCJlbWFpbCI6ImpvaG5kb2VAZXhhbXBsZS5jb20iLCJyb2xlIjpbImN1c3RvbWVyIl0sImlhdCI6MTcwODU1OTU2MH0.CK0OPtqZx6LyFD-Ozf6BW4RlNLmRrFDRloI5vqWXu3k",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reference\": \"moun2v4ope\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/orders/verify/7",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"orders",
								"verify",
								"7"
							]
						},
						"description": "**Purpose**:  \nThis route facilitates the verification of an order's current status by leveraging the Paystack API. The system retrieves the latest status information for the specified order reference.  \n\nThe system updates the internal order status within the platform.\n\n**Body Parameter:**\n\n- reference { string } - Unique identifier associated with the order."
					},
					"response": [
						{
							"name": "200 OK - Order canceled",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"reference\": \"9g7qqr5vlx\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/orders/verify/5",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"orders",
										"verify",
										"5"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "64"
								},
								{
									"key": "ETag",
									"value": "W/\"40-jf+KnFANlO9RxXHYkluHhoYjVmY\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 Feb 2024 01:51:09 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Order canceled\",\n    \"status\": \"success\",\n    \"statusCode\": 200\n}"
						},
						{
							"name": "Order succesful",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"reference\": \"moun2v4ope\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/orders/verify/7",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"orders",
										"verify",
										"7"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "66"
								},
								{
									"key": "ETag",
									"value": "W/\"42-xxkVnVOoPZNdgttQUSFu21NPMI4\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 Feb 2024 03:25:06 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Order successful\",\n    \"status\": \"success\",\n    \"statusCode\": 200\n}"
						}
					]
				},
				{
					"name": "Orders SSE",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/orders/sse",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"orders",
								"sse"
							]
						}
					},
					"response": []
				},
				{
					"name": "SSE-valid",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:300/orders/sse-valid",
							"host": [
								"localhost"
							],
							"port": "300",
							"path": [
								"orders",
								"sse-valid"
							]
						}
					},
					"response": []
				}
			],
			"description": "This section offers an overview of the order processing mechanisms within the food ordering service. It covers:\n\n- Customer order placement procedures, including item selection and payment (mock).\n    \n- Order confirmation and processing workflows.\n    \n- Payment processing with retry logic for failed transactions.\n    \n- Order status updates and notification systems for customers and vendors."
		},
		{
			"name": "Customer",
			"item": [
				{
					"name": "Get Stores",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/customers/stores",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"customers",
								"stores"
							]
						},
						"description": "**Purpose:**\n\nRetrieves information about all stores within the system. Filters out stores with any visibility restrictions, ensuring only operational and publicly accessible stores are included. Returns a list of detailed store information for the user."
					},
					"response": []
				},
				{
					"name": "Get Store Items",
					"request": {
						"method": "GET",
						"header": [],
						"description": "**Purpose:**\n\nRetrieves information about all items within the system. Filters out store items with any visibility restrictions, ensuring only operational and publicly accessible store items are included. Returns a list of detailed store information for the user."
					},
					"response": []
				}
			],
			"description": "This section caters to customers interacting with the food ordering service. It provides guidance on:\n\n- Browsing available restaurant menus and food items.\n- Placing orders and selecting desired delivery time slots.\n- Mock payment processing procedures and order confirmation.\n    \n\nThese introductions provide a brief overview of the content within each folder, enabling users to navigate the documentation efficiently and locate the information relevant to their needs."
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Get Vendors",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjE2LCJ1c2VybmFtZSI6ImFkbWluIiwiZW1haWwiOiJvamViaXlpZGF2aWRkYW5pZWxAZ21haWwuY29tIiwicm9sZSI6WyJzdXBlcmFkbWluIl0sImlhdCI6MTcwODU4NjQ2Nn0.rmDAVghUMcsZsQIVKMEQueQtxlbsHunnItf1V7KBPrY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/admin/vendors",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"admin",
								"vendors"
							]
						},
						"description": "**Purpose:**\n\nAllows admin to get all vendors on the platform at a point in time"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/admin/vendors",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"admin",
										"vendors"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "564"
								},
								{
									"key": "ETag",
									"value": "W/\"234-DKZsZSDK5a7XWpfNvlZKv5baClg\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 Feb 2024 07:22:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"vendors retrieved\",\n    \"status\": \"success\",\n    \"statusCode\": 200,\n    \"data\": [\n        {\n            \"vendor_id\": 3,\n            \"name\": \"Test Vendor\",\n            \"email\": \"viidoking@gmail.com\",\n            \"password\": \"$argon2id$v=19$m=65536,t=3,p=4$bCTF2U2XQboyByZiRmD9lw$nstWN4+EpbpJ9If5weX7F7BM4w69uedVXiwTwlnBN8k\",\n            \"phone_number\": \"0900000000\",\n            \"business_address\": \"123, any town stree, main\",\n            \"verificationToken\": \"d79e459ff6e2470fba2b6fbf\",\n            \"verified\": true,\n            \"recipient_code\": \"RCP_zfagmj6shxj7p6z\",\n            \"status\": \"pending\",\n            \"resetToken\": null,\n            \"role\": \"vendor\",\n            \"created_at\": \"2024-02-22T03:09:13.649Z\",\n            \"updated_at\": \"2024-02-22T03:10:33.460Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Approve Vendor",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjE2LCJ1c2VybmFtZSI6ImFkbWluIiwiZW1haWwiOiJvamViaXlpZGF2aWRkYW5pZWxAZ21haWwuY29tIiwicm9sZSI6WyJzdXBlcmFkbWluIl0sImlhdCI6MTcwODU4NjQ2Nn0.rmDAVghUMcsZsQIVKMEQueQtxlbsHunnItf1V7KBPrY",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "localhost:3000/admin/vendors/3",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"admin",
								"vendors",
								"3"
							]
						},
						"description": "**Purpose:**\n\nThis route allows an admin user approve a vendor's store upon registration."
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "localhost:3000/admin/vendors/3",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"admin",
										"vendors",
										"3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "79"
								},
								{
									"key": "ETag",
									"value": "W/\"4f-kON61gCYhfwtrXr6F1T2eqij5Sg\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 Feb 2024 07:24:17 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Vendor - Test Vendor approved\",\n    \"status\": \"success\",\n    \"statusCode\": 200\n}"
						}
					]
				},
				{
					"name": "Restrict Store",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjE2LCJ1c2VybmFtZSI6ImFkbWluIiwiZW1haWwiOiJvamViaXlpZGF2aWRkYW5pZWxAZ21haWwuY29tIiwicm9sZSI6WyJzdXBlcmFkbWluIl0sImlhdCI6MTcwODU4NjQ2Nn0.rmDAVghUMcsZsQIVKMEQueQtxlbsHunnItf1V7KBPrY",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "localhost:3000/admin/vendors/3/stores/6/restrict",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"admin",
								"vendors",
								"3",
								"stores",
								"6",
								"restrict"
							]
						},
						"description": "**Purpose:**\n\nThis route allows the admin to restrict a store, making it inaccessible."
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "localhost:3000/admin/vendors/3/stores/6/restrict",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"admin",
										"vendors",
										"3",
										"stores",
										"6",
										"restrict"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "63"
								},
								{
									"key": "ETag",
									"value": "W/\"3f-mG3CYFXM5+Hn1dpzSRdXM0gqJCM\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 Feb 2024 07:28:04 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"store closed.\",\n    \"status\": \"success\",\n    \"statusCode\": 200\n}"
						}
					]
				},
				{
					"name": "Open Store",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjE2LCJ1c2VybmFtZSI6ImFkbWluIiwiZW1haWwiOiJvamViaXlpZGF2aWRkYW5pZWxAZ21haWwuY29tIiwicm9sZSI6WyJzdXBlcmFkbWluIl0sImlhdCI6MTcwODU4NjQ2Nn0.rmDAVghUMcsZsQIVKMEQueQtxlbsHunnItf1V7KBPrY",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "localhost:3000/admin/vendors/3/stores/6/open",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"admin",
								"vendors",
								"3",
								"stores",
								"6",
								"open"
							]
						},
						"description": "Purpose:\n\nAllows admin user lift a restriction on the store that had been placed earlier"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "localhost:3000/admin/vendors/3/stores/6/open",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"admin",
										"vendors",
										"3",
										"stores",
										"6",
										"open"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "61"
								},
								{
									"key": "ETag",
									"value": "W/\"3d-sSMLfHOf8Tshx0ZhtuRlXJd7Gjc\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 Feb 2024 07:30:22 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"store Open.\",\n    \"status\": \"success\",\n    \"statusCode\": 200\n}"
						}
					]
				},
				{
					"name": "Get Orders",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjE2LCJ1c2VybmFtZSI6ImFkbWluIiwiZW1haWwiOiJvamViaXlpZGF2aWRkYW5pZWxAZ21haWwuY29tIiwicm9sZSI6WyJzdXBlcmFkbWluIl0sImlhdCI6MTcwODU4NjQ2Nn0.rmDAVghUMcsZsQIVKMEQueQtxlbsHunnItf1V7KBPrY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/admin/orders",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"admin",
								"orders"
							]
						},
						"description": "**Purpose:**\n\nAllows the admin user insession get all orders on the site at a point in time."
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/admin/orders",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"admin",
										"orders"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "267"
								},
								{
									"key": "ETag",
									"value": "W/\"10b-3ijaQJ4yl8cu+sxWmpezvLpbcXo\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 Feb 2024 07:32:13 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Orders retrieved\",\n    \"status\": \"success\",\n    \"statusCode\": 200,\n    \"data\": [\n        {\n            \"order_id\": 7,\n            \"customer_id\": 15,\n            \"store_id\": 3,\n            \"timeslot_id\": 1,\n            \"placed_at\": \"2024-02-22T03:18:07.650Z\",\n            \"delivery_location\": \"Address 34\",\n            \"status\": \"confirmed\",\n            \"total_price\": 285.65,\n            \"vendor_id\": null\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Customers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjE2LCJ1c2VybmFtZSI6ImFkbWluIiwiZW1haWwiOiJvamViaXlpZGF2aWRkYW5pZWxAZ21haWwuY29tIiwicm9sZSI6WyJzdXBlcmFkbWluIl0sImlhdCI6MTcwODU4NjQ2Nn0.rmDAVghUMcsZsQIVKMEQueQtxlbsHunnItf1V7KBPrY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/admin/customers",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"admin",
								"customers"
							]
						},
						"description": "Purpose:\n\nAllows the user to get all customers on the platform at a point in time."
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/admin/customers",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"admin",
										"customers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "376"
								},
								{
									"key": "ETag",
									"value": "W/\"178-AXERgoIKMF1LdT+U2TDYuA4WMMk\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 Feb 2024 07:38:20 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Customers Retrieved\",\n    \"status\": \"success\",\n    \"statusCode\": 200,\n    \"data\": [\n        {\n            \"user_id\": 15,\n            \"user_name\": \"johndoe123\",\n            \"email\": \"johndoe@example.com\",\n            \"phone_number\": \"+1234567890\",\n            \"password\": null,\n            \"google_id\": \"1234567890\",\n            \"role\": \"customer\",\n            \"verified\": false,\n            \"verificationToken\": null,\n            \"resetToken\": null,\n            \"created_at\": \"2024-02-22T03:17:35.884Z\",\n            \"updated_at\": \"2024-02-22T03:17:35.884Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Admin SSE",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjMsInVzZXJuYW1lIjoiYWRtaW4iLCJlbWFpbCI6Im9qZWJpeWlkYXZpZGRhbmllbEBnbWFpbC5jb20iLCJyb2xlIjpbInN1cGVyYWRtaW4iXSwiaWF0IjoxNzA4NjY4MTk0fQ.E4tgpvwC6E4iPbpdColH7NWdZf_jLUc429NKpnFr02Y",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/admin/sse",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"admin",
								"sse"
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/admin/sse",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"admin",
										"sse"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "content-security-policy",
									"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "cross-origin-opener-policy",
									"value": "same-origin"
								},
								{
									"key": "cross-origin-resource-policy",
									"value": "same-origin"
								},
								{
									"key": "origin-agent-cluster",
									"value": "?1"
								},
								{
									"key": "referrer-policy",
									"value": "no-referrer"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-dns-prefetch-control",
									"value": "off"
								},
								{
									"key": "x-download-options",
									"value": "noopen"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-permitted-cross-domain-policies",
									"value": "none"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "text/event-stream"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "private, no-cache, no-store, must-revalidate, max-age=0, no-transform"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expire",
									"value": "0"
								},
								{
									"key": "X-Accel-Buffering",
									"value": "no"
								},
								{
									"key": "Date",
									"value": "Fri, 23 Feb 2024 06:48:30 GMT"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "\nid: 1\ndata: Mails sent to all customers\n\n"
						}
					]
				},
				{
					"name": "Send Message",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjMsInVzZXJuYW1lIjoiYWRtaW4iLCJlbWFpbCI6Im9qZWJpeWlkYXZpZGRhbmllbEBnbWFpbC5jb20iLCJyb2xlIjpbInN1cGVyYWRtaW4iXSwiaWF0IjoxNzA4NjY4MTk0fQ.E4tgpvwC6E4iPbpdColH7NWdZf_jLUc429NKpnFr02Y",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"subject\": \"Test subject\",\r\n    \"content\": \"Test content\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/admin/sendMessage",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"admin",
								"sendMessage"
							]
						}
					},
					"response": []
				}
			],
			"description": "This section caters to the Super Admin responsible for overseeing the food ordering service. It encompasses:\n\n- Vendor approval and rejection procedures.\n    \n- Store visibility control and management.\n    \n- Real-time monitoring of orders, vendors, and system activity.\n    \n- Customer communication channels for sending broadcast messages.\n    \n- System configuration and administrative tasks."
		}
	],
	"auth": {
		"type": "inherit"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}